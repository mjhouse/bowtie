(function() {var implementors = {};
implementors["bowtie_models"] = [{text:"impl&lt;__FK&gt; BelongsTo&lt;<a class=\"struct\" href=\"bowtie_models/view/struct.View.html\" title=\"struct bowtie_models::view::View\">View</a>&gt; for <a class=\"struct\" href=\"bowtie_models/post/struct.Post.html\" title=\"struct bowtie_models::post::Post\">Post</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__FK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'__a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'__a </a>__FK&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'__a <a class=\"struct\" href=\"bowtie_models/view/struct.View.html\" title=\"struct bowtie_models::view::View\">View</a>: Identifiable&lt;Id = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'__a </a>__FK&gt;,&nbsp;</span>",synthetic:false,types:["bowtie_models::post::Post"]},{text:"impl&lt;__FK&gt; BelongsTo&lt;<a class=\"struct\" href=\"bowtie_models/user/struct.User.html\" title=\"struct bowtie_models::user::User\">User</a>&gt; for <a class=\"struct\" href=\"bowtie_models/view/struct.View.html\" title=\"struct bowtie_models::view::View\">View</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__FK: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'__a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'__a </a>__FK&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&amp;'__a <a class=\"struct\" href=\"bowtie_models/user/struct.User.html\" title=\"struct bowtie_models::user::User\">User</a>: Identifiable&lt;Id = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'__a </a>__FK&gt;,&nbsp;</span>",synthetic:false,types:["bowtie_models::view::View"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()